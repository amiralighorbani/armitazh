<!DOCTYPE html>
<html lang="en" dir="rtl">
  <head>
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <meta name="description" content />
    <meta name="author" content />
    <title>صفحه اصلی</title>
    <link rel="icon" type="image/x-icon" href="/pic/setting.svg" />
    <link
      href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css"
      rel="stylesheet"
    />
    <link href="/css/tvstyles.css" rel="stylesheet" />
  </head>
  <style>
    @font-face {
      font-family: "yekan";
      src: url("../font/Yekan.ttf");
    }

    * {
      font-family: "yekan";
      letter-spacing: 0;
    }

    #helper {
      background: linear-gradient(
          to bottom,
          rgba(0, 0, 0, 0.3) 0%,
          rgba(0, 0, 0, 0.7) 75%,
          #000 100%
        ),
        url("./../pic/armit.jpg");
      background-position: center;
      background-repeat: no-repeat;
      background-attachment: scroll;
      background-size: cover;
    }

    .switch {
      position: relative;
      display: inline-block;
      width: 60px;
      height: 34px;
    }

    .switch input {
      opacity: 0;
      width: 0;
      height: 0;
    }

    .slider {
      position: absolute;
      cursor: pointer;
      top: 0;
      left: 0;
      right: 0;
      bottom: 0;
      background-color: #ccc;
      -webkit-transition: 0.4s;
      transition: 0.4s;
    }

    .slider:before {
      position: absolute;
      content: "";
      height: 26px;
      width: 26px;
      left: 4px;
      bottom: 4px;
      background-color: white;
      -webkit-transition: 0.4s;
      transition: 0.4s;
    }

    input:checked + .slider {
      background-color: #2196f3;
    }

    input:focus + .slider {
      box-shadow: 0 0 1px #2196f3;
    }

    input:checked + .slider:before {
      -webkit-transform: translateX(26px);
      -ms-transform: translateX(26px);
      transform: translateX(26px);
    }

    /* Rounded sliders */
    .slider.round {
      border-radius: 34px;
    }

    .slider.round:before {
      border-radius: 50%;
    }

    .selection-bar {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    select {
      padding: 8px;
      font-size: 16px;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    .hellper:hover {
      transition: all 1s ease;
      color: #2196f3;
      background-color: aliceblue;
    }
  </style>

  <body>
    <nav class="navbar navbar-expand-lg" style="background-color: #0b1a2a">
      <div class="container px-4 px-lg-5">
        <a class="navbar-brand" href="#!" style="color: aliceblue"
          >به پنل مدیریت خوش آمدید</a
        >
        <button
          class="navbar-toggler"
          type="button"
          data-bs-toggle="collapse"
          data-bs-target="#navbarSupportedContent"
          aria-controls="navbarSupportedContent"
          aria-expanded="false"
          aria-label="Toggle navigation"
        >
          <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
          <ul class="navbar-nav me-auto mb-2 mb-lg-0 ms-lg-4">
            <li class="nav-item">
              <a
                class="nav-link active"
                aria-current="page"
                href="/tv"
                style="color: aliceblue"
                >صفحه اصلی</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/settings" style="color: aliceblue"
                >تنظیمات</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/tv/b8:27:eb:cd:6d:94"
                id="first"
                style="color: aliceblue"
                >تلویزیون</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/category"
                id="first"
                style="color: aliceblue"
                >دسته بندی</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/video"
                id="first"
                style="color: aliceblue"
                >ویدیو ها</a
              >
            </li>
            <li class="nav-item">
              <a
                class="nav-link"
                href="/view"
                id="first"
                style="color: aliceblue"
                >آمار</a
              >
            </li>
            <li class="nav-item">
              <a class="nav-link" href="/api/logout" style="color: aliceblue"
                >خروج</a
              >
            </li>
          </ul>
        </div>
      </div>
    </nav>

    <section id="helper" class="py-5">
      <div class="container px-4 px-lg-5 mt-5">
        <div class="row">
          <div class="col"></div>
          <div class="col" id="" style="text-align: center; color: aliceblue">
            <h2 id="statuse" style="position: relative; top: -25px"></h2>
          </div>
          <div class="col"></div>
        </div>
        <h4 style="color: aliceblue">
          وضعیت تمام تلوزیون ها:
          <div class="selection-bar" style="position: relative">
            <p style="position: absolute; left: 155px; top: -32px">
              نمایش بر اساس دسته بندی:
            </p>
            <select
              id="category"
              style="position: absolute; left: 5px; top: -40px;width:9rem"
            >
              <option id="cat" value="همه">همه</option>
            </select>
          </div>
        </h4>
        <label
          class="switch"
          style="position: relative; top: -37px; left: -222px"
        >
          <input type="checkbox" checked id="onOffButten" />
          <span class="slider round"></span>
        </label>

        <div
          class="row gx-4 gx-lg-5 row-cols-2 row-cols-md-3 row-cols-xl-4 justify-content-center"
          id="main"
        ></div>
      </div>
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
      <hr />
    </section>

    <footer class="py-5 bg-dark">
      <div class="container">
        <p class="m-0 text-center text-white">
          Copyright &copy; Your Website 2023
        </p>
      </div>
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
    <script src="js/tvscripts.js"></script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
      const main = document.querySelector("#main");
      const onOffButten = document.querySelector("#onOffButten");
      const category = document.getElementById("category");
      const statuse = document.getElementById("statuse");
      console.log(statuse);
      async function getData() {
        const url = "http://localhost:3000/api/version";
        try {
          const response = await fetch(url);
          if (!response.ok) {
            throw new Error(`Response status: ${response.status}`);
          }

          const json = await response.json();
          console.log(json);
          if(json.Text !== undefined){
            statuse.innerHTML = json.Text;
          }
        } catch (error) {
          console.error(error.message);
        }
      }

      getData();
      var socket = io();

      socket.emit("setMac", "admin");

      socket.on("reloade", (data) => {
        if (data != "") {
          alert(data);
        }
        location.reload();
      });

      socket.emit("getGroup");
      socket.on("jsonFile", async (data) => {
        const tvs = data["player"];
        if (data["state"]) onOffButten.checked = true;
        if (!data["state"]) onOffButten.checked = false;

        const groups = data["groups"];
        let groupsName = [];
        groups.forEach((g) => {
          groupsName.push(g.name);
          if(g.name !== "بدون دسته بندی"){
            category.innerHTML += `<option id="cat" value="${g.name}">${g.name}</option>`;
          }
        });

        onOffButten.addEventListener("click", (e) => {
          if (e.target.checked) {
            tvs.forEach((tv) => {
              tv.state = true;
            });
            data["state"] = true;
          } else {
            tvs.forEach((tv) => {
              tv.state = false;
            });
            data["state"] = false;
          }
          data["player"] = tvs;
          if (!data["state"]) socket.emit("offClient", "all");
          if (data["state"]) socket.emit("onClient", "all");
          socket.emit("changeGroup", data);
          location.reload();
        });

        function showTv(cat) {
          let hello = false;
          let color = "black";
          console.log(cat);
          tvs.forEach((tv) => {
            if (
              tv.groupPlaylist.includes(cat) ||
              cat == 0 ||
              cat == "بدون دسته بندی"
            ) {
              hello = true;
              let onOff = "";
              if (tv.state == true) {
                onOff = "روشن";
                color = "black";
              }
              if (tv.state == false) {
                onOff = "خاموش";
                color = "red";
              }
              let statusee = "";
              let rang = "";
              if (tv.connection == true) {
                statusee = "انلاین";
                rang = "black";
              } else {
                statusee = "افلاین";
                rang = "red";
              }
              main.innerHTML += `
                                <div class="col mb-5">
                                    <div class="card h-100">
                                        <img class="card-img-top" src="/pic/${tv.image}" alt="..." />
                                        <div class="card-body p-4">
                                            <div class="text-center">
                                                <h5 class="fw-bolder">${tv.address}</h5>
                                                <p style="color:${color};">
                                                    وضعیت:${onOff} 
                                                </p>
                                                <p style="color:${rang};" id="${tv.name}">
                                                    ارتباط:${statusee} 
                                                </p>
                                                <p>
                                                    ای پی : ${tv.ip}
                                                </p>
                                            </div>
                                        </div>
                                        <div class="card-footer p-4 pt-0 border-top-0 bg-transparent">
                                            <div class="text-center">
                                                <a class="btn btn-outline-dark mt-auto" href="/tv/${tv.name}">
                                                    مدیریت تلوزیون
                                                </a>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                `;
            }
          });
          if (!hello) {
            main.innerHTML += `
                            <h4 style="color:aliceblue;height:350px">تلوزیونی یافت نشد</h4>
                        `;
          }
        }
        showTv(0);

        category.addEventListener("change", (e) => {
          groupsName.forEach((g) => {
            if (g == e.target.value) {
              while (main.firstChild) {
                main.removeChild(main.firstChild);
              }
              showTv(e.target.value);
            }
            if (e.target.value == "همه") {
              while (main.firstChild) {
                main.removeChild(main.firstChild);
              }
              showTv(0);
            }
          });
        });
      });
      socket.on("tvDc", (data) => {
        let color = "";
        if (data.text == "برقرار") {
          color = "black";
        } else {
          color = "red";
        }

        document.getElementById(data.name).textContent = "ارتباط:" + data.text;
        document.getElementById(data.name).style.color = color;
      });
    </script>
  </body>
</html>
